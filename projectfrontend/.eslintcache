[{"F:\\mernbootcamp\\projectfrontend\\src\\index.js":"1","F:\\mernbootcamp\\projectfrontend\\src\\Routes.js":"2","F:\\mernbootcamp\\projectfrontend\\src\\core\\Home.js":"3","F:\\mernbootcamp\\projectfrontend\\src\\user\\UserDashBoard.js":"4","F:\\mernbootcamp\\projectfrontend\\src\\core\\Cart.js":"5","F:\\mernbootcamp\\projectfrontend\\src\\user\\AdminDashBoard.js":"6","F:\\mernbootcamp\\projectfrontend\\src\\user\\Signup.js":"7","F:\\mernbootcamp\\projectfrontend\\src\\admin\\ManageCategories.js":"8","F:\\mernbootcamp\\projectfrontend\\src\\user\\Signin.js":"9","F:\\mernbootcamp\\projectfrontend\\src\\admin\\AddProduct.js":"10","F:\\mernbootcamp\\projectfrontend\\src\\admin\\AddCategory.js":"11","F:\\mernbootcamp\\projectfrontend\\src\\admin\\ManageProducts.js":"12","F:\\mernbootcamp\\projectfrontend\\src\\auth\\helper\\AdminRoutes.js":"13","F:\\mernbootcamp\\projectfrontend\\src\\admin\\UpdateProduct.js":"14","F:\\mernbootcamp\\projectfrontend\\src\\auth\\helper\\PrivateRoutes.js":"15","F:\\mernbootcamp\\projectfrontend\\src\\backend.js":"16","F:\\mernbootcamp\\projectfrontend\\src\\core\\Paymentb.js":"17","F:\\mernbootcamp\\projectfrontend\\src\\core\\Base.js":"18","F:\\mernbootcamp\\projectfrontend\\src\\core\\Card.js":"19","F:\\mernbootcamp\\projectfrontend\\src\\auth\\helper\\index.js":"20","F:\\mernbootcamp\\projectfrontend\\src\\core\\helper\\coreapicalls.js":"21","F:\\mernbootcamp\\projectfrontend\\src\\core\\helper\\cartHelper.js":"22","F:\\mernbootcamp\\projectfrontend\\src\\admin\\helper\\adminapicall.js":"23","F:\\mernbootcamp\\projectfrontend\\src\\core\\helper\\ImageHelper.js":"24","F:\\mernbootcamp\\projectfrontend\\src\\core\\Menu.js":"25","F:\\mernbootcamp\\projectfrontend\\src\\core\\helper\\paymentbhelper.js":"26","F:\\mernbootcamp\\projectfrontend\\src\\core\\helper\\orderHelper.js":"27"},{"size":155,"mtime":1607785335019,"results":"28","hashOfConfig":"29"},{"size":1746,"mtime":1607197453156,"results":"30","hashOfConfig":"29"},{"size":1051,"mtime":1607197452746,"results":"31","hashOfConfig":"29"},{"size":233,"mtime":1607197452968,"results":"32","hashOfConfig":"29"},{"size":1335,"mtime":1607777037793,"results":"33","hashOfConfig":"29"},{"size":2385,"mtime":1607197452985,"results":"34","hashOfConfig":"29"},{"size":3286,"mtime":1607197453020,"results":"35","hashOfConfig":"29"},{"size":2248,"mtime":1607197745308,"results":"36","hashOfConfig":"29"},{"size":3153,"mtime":1607197453004,"results":"37","hashOfConfig":"29"},{"size":4466,"mtime":1607197452498,"results":"38","hashOfConfig":"29"},{"size":2251,"mtime":1607197452427,"results":"39","hashOfConfig":"29"},{"size":2221,"mtime":1607197452361,"results":"40","hashOfConfig":"29"},{"size":565,"mtime":1607197452660,"results":"41","hashOfConfig":"29"},{"size":5104,"mtime":1607197452451,"results":"42","hashOfConfig":"29"},{"size":533,"mtime":1607197452680,"results":"43","hashOfConfig":"29"},{"size":50,"mtime":1607197453120,"results":"44","hashOfConfig":"29"},{"size":2692,"mtime":1607785282397,"results":"45","hashOfConfig":"29"},{"size":979,"mtime":1607197452764,"results":"46","hashOfConfig":"29"},{"size":2168,"mtime":1607197452804,"results":"47","hashOfConfig":"29"},{"size":1351,"mtime":1607197452610,"results":"48","hashOfConfig":"29"},{"size":227,"mtime":1607197452899,"results":"49","hashOfConfig":"29"},{"size":1054,"mtime":1607403080147,"results":"50","hashOfConfig":"29"},{"size":2639,"mtime":1607197697609,"results":"51","hashOfConfig":"29"},{"size":562,"mtime":1607197452826,"results":"52","hashOfConfig":"29"},{"size":2331,"mtime":1607197452782,"results":"53","hashOfConfig":"29"},{"size":920,"mtime":1607762413501,"results":"54","hashOfConfig":"29"},{"size":456,"mtime":1607197452843,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a1xrvi",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\mernbootcamp\\projectfrontend\\src\\index.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\Routes.js",[],["119","120","121"],"F:\\mernbootcamp\\projectfrontend\\src\\core\\Home.js",["122","123"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { getProducts } from \"./helper/coreapicalls\";\n\nexport default function Home() {\n  const [products, setProducts] = useState([]);\n  const [error, setError] = useState(false);\n\n  const loadAllProduct = () => {\n    getProducts().then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProducts(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadAllProduct();\n  }, []);\n\n  return (\n    <Base title=\"Home Page\" description=\"Welcome to the Tshirt Store\">\n      <div className=\"row text-center\">\n        <h1 className=\"text-white\">All of tshirts</h1>\n        <div className=\"row\">\n          {products.map((product, index) => {\n            return (\n              <div key={index} className=\"col-4 mb-4\">\n                <Card product={product} />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Base>\n  );\n}\n","F:\\mernbootcamp\\projectfrontend\\src\\user\\UserDashBoard.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\core\\Cart.js",["124","125"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { loadCart } from \"./helper/cartHelper\";\nimport Paymentb from \"./Paymentb\";\n\nconst Cart = () => {\n  const [products, setProducts] = useState([]);\n  const [reload, setReload] = useState(false);\n\n  useEffect(() => {\n    setProducts(loadCart());\n  }, [reload]);\n\n  const loadAllProducts = (products) => {\n    return (\n      <div>\n        <h2>This section is to load products</h2>\n        {products.map((product, index) => (\n          <Card\n            key={index}\n            product={product}\n            removeFromCart={true}\n            addtoCart={false}\n            setReload={setReload}\n            reload={reload}\n          />\n        ))}\n      </div>\n    );\n  };\n  const loadCheckout = () => {\n    return (\n      <div>\n        <h2>This section for checkout</h2>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Cart Page\" description=\"Ready to checkout\">\n      <div className=\"row text-center\">\n  <div className=\"col-6\">{products.length > 0 ? loadAllProducts(products): (<h3>No Products in cart</h3>) }</div>\n  <div className=\"col-6\"><Paymentb  products = {products} setReload = {setReload}/> </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default Cart;\n","F:\\mernbootcamp\\projectfrontend\\src\\user\\AdminDashBoard.js",["126"],"import React from \"react\";\nimport Base from \"../core/Base\";\nimport { isAutheticated } from \"../auth/helper/index\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminDashBoard = () => {\n  const {\n    user: { name, email, role }\n  } = isAutheticated();\n\n  const adminLeftSide = () => {\n    return (\n      <div className=\"card\">\n        <h4 className=\"card-header bg-dark text-white\">Admin Navigation</h4>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            <Link to=\"/admin/create/category\" className=\"nav-link text-success\">\n              Create Categories\n            </Link>\n          </li>\n          <li className=\"list-group-item\">\n            <Link to=\"/admin/categories\" className=\"nav-link text-success\">\n              Manage Categories\n            </Link>\n          </li>\n          <li className=\"list-group-item\">\n            <Link to=\"/admin/create/product\" className=\"nav-link text-success\">\n              Create Product\n            </Link>\n          </li>\n          <li className=\"list-group-item\">\n            <Link to=\"/admin/products\" className=\"nav-link text-success\">\n              Manage Products\n            </Link>\n          </li>\n          <li className=\"list-group-item\">\n            <Link to=\"/admin/orders\" className=\"nav-link text-success\">\n              Manage Orders\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n  };\n\n  const adminRightSide = () => {\n    return (\n      <div className=\"card mb-4\">\n        <h4 className=\"card-header\">Admin Information</h4>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">\n            <span className=\"badge badge-success mr-2\">Name:</span> {name}\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"badge badge-success mr-2\">Email:</span> {email}\n          </li>\n\n          <li className=\"list-group-item\">\n            <span className=\"badge badge-danger\">Admin Area</span>\n          </li>\n        </ul>\n      </div>\n    );\n  };\n  return (\n    <Base\n      title=\"Welcome to admin area\"\n      description=\"Manage all of your products here\"\n      className=\"container bg-success p-4\"\n    >\n      <div className=\"row\">\n        <div className=\"col-3\">{adminLeftSide()}</div>\n        <div className=\"col-9\">{adminRightSide()}</div>\n      </div>\n    </Base>\n  );\n};\n\nexport default AdminDashBoard;\n","F:\\mernbootcamp\\projectfrontend\\src\\user\\Signup.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\admin\\ManageCategories.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\user\\Signin.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\admin\\AddProduct.js",["127","128","129","130","131"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { getCategories, createaProduct } from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\n\nconst AddProduct = () => {\n  const { user, token } = isAutheticated();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getaRedirect: false,\n    formData: \"\"\n  });\n\n  const {\n    name,\n    description,\n    price,\n    stock,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getaRedirect,\n    formData\n  } = values;\n\n  const preload = () => {\n    getCategories().then(data => {\n      //console.log(data);\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({ ...values, categories: data, formData: new FormData() });\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload();\n  }, []);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n    createaProduct(user._id, token, formData).then(data => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: \"\",\n          description: \"\",\n          price: \"\",\n          photo: \"\",\n          stock: \"\",\n          loading: false,\n          createdProduct: data.name\n        });\n      }\n    });\n  };\n\n  const handleChange = name => event => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values, [name]: value });\n  };\n\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: createdProduct ? \"\" : \"none\" }}\n    >\n      <h4>{createdProduct} created successfully</h4>\n    </div>\n  );\n\n  const createProductForm = () => (\n    <form>\n      <span>Post photo</span>\n      <div className=\"form-group\">\n        <label className=\"btn btn-block btn-success\">\n          <input\n            onChange={handleChange(\"photo\")}\n            type=\"file\"\n            name=\"photo\"\n            accept=\"image\"\n            placeholder=\"choose a file\"\n          />\n        </label>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"name\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Name\"\n          value={name}\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          onChange={handleChange(\"description\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Description\"\n          value={description}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"price\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Price\"\n          value={price}\n        />\n      </div>\n      <div className=\"form-group\">\n        <select\n          onChange={handleChange(\"category\")}\n          className=\"form-control\"\n          placeholder=\"Category\"\n        >\n          <option>Select</option>\n          {categories &&\n            categories.map((cate, index) => (\n              <option key={index} value={cate._id}>\n                {cate.name}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"stock\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Stock\"\n          value={stock}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        onClick={onSubmit}\n        className=\"btn btn-outline-success mb-3\"\n      >\n        Create Product\n      </button>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Add a product here!\"\n      description=\"Welcome to product creation section\"\n      className=\"container bg-info p-4\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {createProductForm()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default AddProduct;\n","F:\\mernbootcamp\\projectfrontend\\src\\admin\\AddCategory.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\admin\\ManageProducts.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\auth\\helper\\AdminRoutes.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\admin\\UpdateProduct.js",["132","133","134","135","136"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getCategories,\n  getProduct,\n  updateProduct\n} from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\n\nconst UpdateProduct = ({ match }) => {\n  const { user, token } = isAutheticated();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getaRedirect: false,\n    formData: \"\"\n  });\n\n  const {\n    name,\n    description,\n    price,\n    stock,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getaRedirect,\n    formData\n  } = values;\n\n  const preload = productId => {\n    getProduct(productId).then(data => {\n      //console.log(data);\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        preloadCategories();\n        setValues({\n          ...values,\n          name: data.name,\n          description: data.description,\n          price: data.price,\n          category: data.category._id,\n          stock: data.stock,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n\n  const preloadCategories = () => {\n    getCategories().then(data => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          categories: data,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload(match.params.productId);\n  }, []);\n\n  //TODO: work on it\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n\n    updateProduct(match.params.productId, user._id, token, formData).then(\n      data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error });\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            description: \"\",\n            price: \"\",\n            photo: \"\",\n            stock: \"\",\n            loading: false,\n            createdProduct: data.name\n          });\n        }\n      }\n    );\n  };\n\n  const handleChange = name => event => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values, [name]: value });\n  };\n\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: createdProduct ? \"\" : \"none\" }}\n    >\n      <h4>{createdProduct} updated successfully</h4>\n    </div>\n  );\n\n  const createProductForm = () => (\n    <form>\n      <span>Post photo</span>\n      <div className=\"form-group\">\n        <label className=\"btn btn-block btn-success\">\n          <input\n            onChange={handleChange(\"photo\")}\n            type=\"file\"\n            name=\"photo\"\n            accept=\"image\"\n            placeholder=\"choose a file\"\n          />\n        </label>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"name\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Name\"\n          value={name}\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          onChange={handleChange(\"description\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Description\"\n          value={description}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"price\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Price\"\n          value={price}\n        />\n      </div>\n      <div className=\"form-group\">\n        <select\n          onChange={handleChange(\"category\")}\n          className=\"form-control\"\n          placeholder=\"Category\"\n        >\n          <option>Select</option>\n          {categories &&\n            categories.map((cate, index) => (\n              <option key={index} value={cate._id}>\n                {cate.name}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"stock\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Stock\"\n          value={stock}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        onClick={onSubmit}\n        className=\"btn btn-outline-success mb-3\"\n      >\n        Update Product\n      </button>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Add a product here!\"\n      description=\"Welcome to product creation section\"\n      className=\"container bg-info p-4\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {createProductForm()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default UpdateProduct;\n","F:\\mernbootcamp\\projectfrontend\\src\\auth\\helper\\PrivateRoutes.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\backend.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\core\\Paymentb.js",["137","138","139","140","141","142","143"],"F:\\mernbootcamp\\projectfrontend\\src\\core\\Base.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\core\\Card.js",["144","145","146"],"import React, { useState, useEffect } from \"react\";\nimport ImageHelper from \"./helper/ImageHelper\";\nimport { Redirect } from \"react-router-dom\";\nimport { addItemToCart, removeItemFromCart } from \"./helper/cartHelper\";\n\nconst Card = ({\n  product,\n  addtoCart = true,\n  removeFromCart = false,\n  setReload = f => f,\n  //   function(f){return f}\n  reload = undefined\n}) => {\n  const [redirect, setRedirect] = useState(false);\n  const [count, setCount] = useState(product.count);\n\n  const cartTitle = product ? product.name : \"A photo from pexels\";\n  const cartDescrption = product ? product.description : \"Default description\";\n  const cartPrice = product ? product.price : \"DEFAULT\";\n\n  const addToCart = () => {\n    addItemToCart(product, () => setRedirect(true));\n  };\n\n  const getARedirect = redirect => {\n    if (redirect) {\n      return <Redirect to=\"/cart\" />;\n    }\n  };\n\n  const showAddToCart = addtoCart => {\n    return (\n      addtoCart && (\n        <button\n          onClick={addToCart}\n          className=\"btn btn-block btn-outline-success mt-2 mb-2\"\n        >\n          Add to Cart\n        </button>\n      )\n    );\n  };\n\n  const showRemoveFromCart = removeFromCart => {\n    return (\n      removeFromCart && (\n        <button\n          onClick={() => {\n            removeItemFromCart(product._id);\n            setReload(!reload);\n          }}\n          className=\"btn btn-block btn-outline-danger mt-2 mb-2\"\n        >\n          Remove from cart\n        </button>\n      )\n    );\n  };\n  return (\n    <div className=\"card text-white bg-dark border border-info \">\n      <div className=\"card-header lead\">{cartTitle}</div>\n      <div className=\"card-body\">\n        {getARedirect(redirect)}\n        <ImageHelper product={product} />\n        <p className=\"lead bg-success font-weight-normal text-wrap\">\n          {cartDescrption}\n        </p>\n        <p className=\"btn btn-success rounded  btn-sm px-4\">$ {cartPrice}</p>\n        <div className=\"row\">\n          <div className=\"col-12\">{showAddToCart(addtoCart)}</div>\n          <div className=\"col-12\">{showRemoveFromCart(removeFromCart)}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","F:\\mernbootcamp\\projectfrontend\\src\\auth\\helper\\index.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\core\\helper\\coreapicalls.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\core\\helper\\cartHelper.js",["147"],"export const addItemToCart = (item, next) => {\n  let cart = [];\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    cart.push({\n      ...item,\n      count: 1\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    next();\n  }\n};\n\nexport const loadCart = () => {\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      return JSON.parse(localStorage.getItem(\"cart\"));\n    }\n  }\n};\n\nexport const removeItemFromCart = productId => {\n  let cart = [];\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    cart.map((product, i) => {\n      if (product._id === productId) {\n        cart.splice(i, 1);\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }\n  return cart;\n};\n\n//next to get a callback\nexport const cartEmpty = next => {\n  if (typeof window !== undefined) {\n   localStorage.removeItem(\"cart\")\n   next() \n  }\n}","F:\\mernbootcamp\\projectfrontend\\src\\admin\\helper\\adminapicall.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\core\\helper\\ImageHelper.js",["148"],"import React from \"react\";\nimport { API } from \"../../backend\";\n\nconst ImageHelper = ({ product }) => {\n  const imageurl = product\n    ? `${API}/product/photo/${product._id}`\n    : `https://images.pexels.com/photos/3561339/pexels-photo-3561339.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940`;\n  return (\n    <div className=\"rounded border border-success p-2\">\n      <img\n        src={imageurl}\n        alt=\"photo\"\n        style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n        className=\"mb-3 rounded\"\n      />\n    </div>\n  );\n};\n\nexport default ImageHelper;\n","F:\\mernbootcamp\\projectfrontend\\src\\core\\Menu.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\core\\helper\\paymentbhelper.js",[],"F:\\mernbootcamp\\projectfrontend\\src\\core\\helper\\orderHelper.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":13},{"ruleId":"155","severity":1,"message":"159","line":10,"column":10,"nodeType":"157","messageId":"158","endLine":10,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":13},{"ruleId":"155","severity":1,"message":"160","line":34,"column":9,"nodeType":"157","messageId":"158","endLine":34,"endColumn":21},{"ruleId":"155","severity":1,"message":"161","line":8,"column":26,"nodeType":"157","messageId":"158","endLine":8,"endColumn":30},{"ruleId":"155","severity":1,"message":"162","line":31,"column":5,"nodeType":"157","messageId":"158","endLine":31,"endColumn":13},{"ruleId":"155","severity":1,"message":"163","line":32,"column":5,"nodeType":"157","messageId":"158","endLine":32,"endColumn":12},{"ruleId":"155","severity":1,"message":"159","line":33,"column":5,"nodeType":"157","messageId":"158","endLine":33,"endColumn":10},{"ruleId":"155","severity":1,"message":"164","line":35,"column":5,"nodeType":"157","messageId":"158","endLine":35,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":52,"column":6,"nodeType":"167","endLine":52,"endColumn":8,"suggestions":"168"},{"ruleId":"155","severity":1,"message":"162","line":35,"column":5,"nodeType":"157","messageId":"158","endLine":35,"endColumn":13},{"ruleId":"155","severity":1,"message":"163","line":36,"column":5,"nodeType":"157","messageId":"158","endLine":36,"endColumn":12},{"ruleId":"155","severity":1,"message":"159","line":37,"column":5,"nodeType":"157","messageId":"158","endLine":37,"endColumn":10},{"ruleId":"155","severity":1,"message":"164","line":39,"column":5,"nodeType":"157","messageId":"158","endLine":39,"endColumn":17},{"ruleId":"165","severity":1,"message":"169","line":78,"column":6,"nodeType":"167","endLine":78,"endColumn":8,"suggestions":"170"},{"ruleId":"155","severity":1,"message":"171","line":2,"column":10,"nodeType":"157","messageId":"158","endLine":2,"endColumn":18},{"ruleId":"155","severity":1,"message":"172","line":2,"column":20,"nodeType":"157","messageId":"158","endLine":2,"endColumn":29},{"ruleId":"155","severity":1,"message":"173","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":14},{"ruleId":"155","severity":1,"message":"174","line":5,"column":10,"nodeType":"157","messageId":"158","endLine":5,"endColumn":21},{"ruleId":"165","severity":1,"message":"175","line":56,"column":6,"nodeType":"167","endLine":56,"endColumn":8,"suggestions":"176"},{"ruleId":"155","severity":1,"message":"177","line":61,"column":9,"nodeType":"157","messageId":"158","endLine":61,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":83,"column":20,"nodeType":"180","messageId":"181","endLine":83,"endColumn":22},{"ruleId":"155","severity":1,"message":"182","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"183","line":15,"column":10,"nodeType":"157","messageId":"158","endLine":15,"endColumn":15},{"ruleId":"155","severity":1,"message":"184","line":15,"column":17,"nodeType":"157","messageId":"158","endLine":15,"endColumn":25},{"ruleId":"178","severity":1,"message":"179","line":30,"column":27,"nodeType":"180","messageId":"181","endLine":30,"endColumn":29},{"ruleId":"185","severity":1,"message":"186","line":10,"column":7,"nodeType":"187","endLine":15,"endColumn":9},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"jsx-a11y/accessible-emoji",[],"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'loadCheckout' is assigned a value but never used.","'role' is assigned a value but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getaRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["190"],"React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["191"],"'loadCart' is defined but never used.","'cartEmpty' is defined but never used.","'Link' is defined but never used.","'createOrder' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["192"],"'getNonce' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [preload]",{"range":"199","text":"200"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"201","text":"202"},"Update the dependencies array to be: [token, userId]",{"range":"203","text":"204"},[1091,1093],"[preload]",[1639,1641],"[match.params.productId, preload]",[1683,1685],"[token, userId]"]